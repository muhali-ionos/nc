on:
  workflow_dispatch:

name: New-Modified-Hi-Drive-Build-NC
jobs:
  build-and-push:
    runs-on: self-hosted-nc
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Print contents
        run: |
          pwd
          ls -la
          #sudo apt-get update && sudo apt-get install -y make
          #make --version  

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: IONOS-Productivity/nc-server
          ref: master

      - name: Package Code
        run: |
          pwd
          ls -la
          #tar -czf /tmp/nc-server.tar.gz ../nc/
          #ls -lh /tmp/nc-server.tar.gz

      #- name: Upload Artifact
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: nc-server-package
      #    path: /tmp/nc-server.tar.gz  

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        id: install
        with:
          version: 'latest'  

      #- name: Setup KUBECONFIG
      #  run: |
      #    mkdir -p $HOME/.kube
      #    echo "${{ secrets.KUBECONFIG_PUKI }}" > $HOME/.kube/config
      #    cat $HOME/.kube/config
      #    export KUBECONFIG=$HOME/.kube/config

      - name: Create Docker Secret Config for Kaniko
        run: |
          mkdir -p $HOME/.docker
          AUTH="$(echo -n "${{ secrets.HARBOR_USERNAME }}:${{ secrets.HARBOR_PASSWORD }}" | base64)"
          echo "{\"auths\":{\"reg.1u1.it:443\":{\"auth\":\"${AUTH}\"}}}" > $HOME/.docker/config.json
          set +e
          kubectl get secret docker-sec-config -n arc-runners
          if [ $? -ne 0 ]; then
            kubectl create secret generic docker-sec-config --from-file=config.json=$HOME/.docker/config.json --namespace=arc-runners
          else
            echo "Secret docker-sec-config already exists, skipping creation."
          fi
          set -e
        
      - name: Create Dockerfile Config for Kaniko
        run: |
          # cd /tmp/nc-server/.devcontainer
          set +e
          kubectl get cm dockerfile-config
          if [ $? -ne 0 ]; then
            kubectl create configmap dockerfile-config --from-file=Dockerfile=./.devcontainer/Dockerfile --namespace=arc-runners            
          else
            echo "Configmap dockerfile-config already exists, skipping creation."
          fi
          set -e 

      - name: Create and Apply Kaniko Job
        run: |
          echo "
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: kaniko-nc-build-push
            namespace: arc-runners
          spec:
            template:
              spec:
                containers:
                - name: kaniko
                  image: gcr.io/kaniko-project/executor:debug
                  command:
                  - /bin/sh
                  - -c
                  - |
                    echo "Listing contents of /workspace:"
                    ls -l /workspace
                    cat /workplace/Dockerfile
                  args:
                  - --dockerfile=/workspace/Dockerfile 
                  - --context=dir:///workspace
                  - --destination=reg.1u1.it:443/itoah/hidrive-nc-test:latest
                  - --skip-tls-verify
                  volumeMounts:
                  - name: docker-file-config
                    mountPath: /workspace
                  - name: docker-sec-config
                    mountPath: /kaniko/.docker
                restartPolicy: Never
                volumes:
                - name: docker-file-config
                  configMap:
                    name: docker-file-config
                - name: docker-sec-config
                  secret:
                    secretName: docker-sec-config
            backoffLimit: 1
          " | kubectl apply -f -

          
      - name: Monitor Job Status
        run: |
          echo "Monitoring Nextcloud build job."
          kubectl wait --for=condition=complete job/kaniko-nc-build-push --timeout=300s
          echo "Nextcloud Image is pushed to the Harbor Registry."   
            
