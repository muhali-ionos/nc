on:
  workflow_dispatch:

name: PVC-Modified-Hi-Drive
jobs:
  build-and-push:
    runs-on: self-hosted-nc
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      #- name: Print contents
      #  run: |
      #    pwd
      #    ls -la
      #    sudo apt-get update && sudo apt-get install -y make
      #    make --version  

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: IONOS-Productivity/nc-server
          ref: master

      #- name: Package Code
      #  run: |
      #    pwd
      #    ls -la
      #    tar -czf /tmp/nc-server.tar.gz ../nc/
      #    ls -lh /tmp/nc-server.tar.gz

      #- name: Upload Artifact
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: nc-server-package
      #    path: /tmp/nc-server.tar.gz  

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        id: install
        with:
          version: 'latest'  
          
      - name: Create Docker Secret Config for Kaniko
        run: |
          mkdir -p $HOME/.docker
          AUTH="$(echo -n "${{ secrets.HARBOR_USERNAME }}:${{ secrets.HARBOR_PASSWORD }}" | base64)"
          echo "{\"auths\":{\"reg.1u1.it:443\":{\"auth\":\"${AUTH}\"}}}" > $HOME/.docker/config.json
          set +e
          kubectl get secret docker-sec-config -n arc-runners
          if [ $? -ne 0 ]; then
            kubectl create secret generic docker-sec-config --from-file=config.json=$HOME/.docker/config.json --namespace=arc-runners
          else
            echo "docker-sec-config already exists, skipping creation."
          fi
          set -e
        
      #- name: Create Dockerfile for Kaniko
      #  run: |
      #    set +e
      #    kubectl get secret docker-file-config
      #    if [ $? -ne 0 ]; then
      #      #kubectl create configmap docker-file-config --from-file=Dockerfile=./.devcontainer/Dockerfile --namespace=arc-runners  
      #      kubectl create secret generic docker-file-config --from-file=Dockerfile=./.devcontainer/Dockerfile --namespace=arc-runners
      #    else
      #      echo "docker-file-config already exists, skipping creation."
      #    fi
      #    set -e 

      - name: Fetch Runner Pod and PVC Name
        id: fetch-pod
        run: |
          POD_NAME=$(kubectl get pods -n arc-runners -l app.kubernetes.io/instance=self-hosted-nc -o jsonpath='{.items[0].metadata.name}')
          echo "POD_NAME=$POD_NAME" >> $GITHUB_ENV
          PVC_NAME="${POD_NAME}-work"
          echo "PVC_NAME=$PVC_NAME" >> $GITHUB_ENV

      - name: Create and Apply Kaniko Job
        run: |
          set +e
          kubectl get job kaniko-nc-build-push -n arc-runners
          if [ $? -eq 0 ]; then
            echo "Job kaniko-nc-build-push exists, deleting it..."
            kubectl delete job kaniko-nc-build-push -n arc-runners
          fi
      
          echo "
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: kaniko-nc-build-push
            namespace: arc-runners
          spec:
            template:
              spec:
                nodeSelector:
                  kubernetes.io/os: linux
                  node-restriction.kubernetes.io/reserved-for: cert-manager                
                containers:
                - name: kaniko
                  image: gcr.io/kaniko-project/executor:debug
                  args:
                  - --dockerfile=/workspace/.devcontainer/Dockerfile
                  - --context=dir:///workspace
                  - --destination=reg.1u1.it:443/itoah/hidrive-nc-test:latest
                  - --skip-tls-verify
                  volumeMounts:
                  - name: build-context
                    mountPath: /workspace
                    readOnly: true
                  - name: docker-sec-config
                    mountPath: /kaniko/.docker
                restartPolicy: Never
                volumes:
                - name: build-context
                  persistentVolumeClaim:
                    claimName: ${PVC_NAME}
                - name: docker-sec-config
                  secret:
                    secretName: docker-sec-config
            backoffLimit: 1
          " | kubectl apply -f -
          set -e 
          
      - name: Monitor Job Status
        run: |
          echo "Monitoring Nextcloud build job."
          kubectl wait --for=condition=complete job/kaniko-nc-build-push --timeout=1200s
          echo "Nextcloud Image is pushed to the Harbor Registry."   
            
      - name: Delete Kaniko Job
        run: |
          kubectl delete job kaniko-nc-build-push --namespace=arc-runners --ignore-not-found
          kubectl delete secret -n arc-runners docker-sec-config
          kubectl delete secret -n arc-runners docker-file-config
          echo "All tasks completed gracefully."
